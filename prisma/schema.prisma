// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model SiteAnalysis {
  id                 Int      @id @default(autoincrement())
  siteId             Int
  site               Site     @relation(fields: [siteId], references: [id])
  usuarioId          Int?
  usuario            Usuario? @relation(fields: [usuarioId], references: [id])
  siteUrl            String
  score              Float
  performance        Float
  accessibility      Float
  bestPractices      Float
  seo                Float
  rawReport          Json?
  relatorioTraduzido Json?
  dataAnalise        DateTime @default(now())
}

model Usuario {
  id           Int            @id @default(autoincrement())
  nome         String
  email        String         @unique
  senha        String
  ativo        Boolean        @default(true)
  role         String         @default("user") // Valores: 'admin' ou 'user'
  criadoEm     DateTime       @default(now())
  atualizadoEm DateTime       @updatedAt
  analises     SiteAnalysis[] // Relacionamento com SiteAnalysis
  sites        Site[] // Relacionamento com os sites cadastrados pelo usu√°rio
}

model Site {
  id         Int            @id @default(autoincrement())
  nome       String
  url        String         @unique
  orgao      String
  ativo      Boolean        @default(true)
  analises   SiteAnalysis[]
  usuarioId  Int?           // Temporariamente opcional
  usuario    Usuario?       @relation(fields: [usuarioId], references: [id])
}

